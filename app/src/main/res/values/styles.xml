<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="floatingActionButtonStyle">@style/Widget.App.FloatingActionButton</item>
        <item name="extendedFloatingActionButtonStyle">
            @style/Widget.App.ExtendedFloatingActionButton
        </item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.MaterialComponents.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.MaterialComponents.Light" />

    <style name="ToolbarTheme" parent="@style/ThemeOverlay.MaterialComponents.Dark.ActionBar">
        <!-- android:textColorPrimary is the color of the title text in the Toolbar  -->
        <item name="android:textColorPrimary">@android:color/holo_blue_light</item>
        <!-- actionMenuTextColor is the color of the text of action (menu) items  -->
        <item name="actionMenuTextColor">@android:color/holo_green_light</item>
        <!-- Tints the input fields like checkboxes and text fields -->
        <item name="colorAccent">@color/cursorAccent</item>
        <!-- Applies to views in their normal state. -->
        <item name="colorControlNormal">@color/controlNormal</item>
        <!-- Applies to views in their activated state (i.e checked or switches) -->
        <item name="colorControlActivated">@color/controlActivated</item>
        <!-- Applied to framework control highlights (i.e ripples or list selectors) -->
        <item name="colorControlHighlight">@color/controlActivated</item>
    </style>

    <!-- This configures the styles for the title within the Toolbar  -->
    <style name="Toolbar.TitleText" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">
        <item name="android:textSize">21sp</item>
        <item name="android:textStyle">italic</item>
        <item name="android:textColorPrimary">@android:color/holo_blue_light</item>
    </style>

    <!-- This configures the styles for the pop up window used for incident annotation -->
    <style name="AppTheme.PopUpWindow">
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowCloseOnTouchOutside">true</item>
        <item name="android:windowBackground">@color/transparent</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:backgroundDimEnabled">true</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">true</item>
    </style>

    <!-- See here for more information: https://github.com/material-components/material-components-android/blob/master/docs/components/FloatingActionButton.md -->
    <style name="ShapeAppearance.FloatingActionButton" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">cut</item>
        <item name="cornerSize">28dp</item>
    </style>

    <style name="ShapeAppearance.FloatingActionButton.Icon" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">0dp</item>
    </style>

    <style name="Widget.App.ExtendedFloatingActionButton" parent="Widget.MaterialComponents.ExtendedFloatingActionButton.Icon">
        <item name="shapeAppearanceOverlay">
            @style/ShapeAppearance.FloatingActionButton.Icon
        </item>
    </style>

    <style name="Widget.App.FloatingActionButton" parent="Widget.MaterialComponents.FloatingActionButton">
        <item name="shapeAppearanceOverlay">
            @style/ShapeAppearance.FloatingActionButton
        </item>
    </style>

</resources>
